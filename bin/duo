#!/usr/bin/env ruby

require 'set'
require 'singleton'
require 'io/console'
require 'shellwords'

module Duo

  def self.jp_voice
    'Kyoko'
  end

  def self.system_available?
    case
    when !system('which say >/dev/null 2>&1')
      $stderr.puts 'command not found: say'
      false
    when !system("say -v #{jp_voice} '' >/dev/null 2>&1")
      $stderr.puts "say: voice not found: #{jp_voice}"
      false
    else
      true
    end
  end

  module Key
    class << self
      keys = {
        :ctrl_c => "\u0003",
        :ctrl_h => "\b",
        :ctrl_n => "\u000E",
        :ctrl_s => "\u0013",
        :up     => "\e[A\u0003",
        :right  => "\e[1C",
      }

      keys.each do |key, value|
        define_method(key) { value }
        define_method(key.to_s + '?') {|v| v === value }
      end
    end
  end

  class SentenceNotFound < StandardError
    def initialize(id)
      super "Couldn't find Sentence with id = #{id}"
    end
  end

  class Sentence
    include Comparable

    attr_reader :id, :en, :ja

    def initialize(params={})
      @id = self.class.auto_increment
      @en = params[:en]
      @ja = params[:ja]
    end

    def <=>(other)
      id <=> other.id
    end

    def quiz
      Thread.new { say }

      show_banner
      print Key.up
      input_answer
    end

    def play
      show_banner(true)
      say
    end

    def say(params={})
      if params[:except] != :ja
        self.class.say(@ja, :voice => Duo::jp_voice)
      end

      if params[:except] != :en
        self.class.say(@en)
      end
    end

    def self.say(sentence, options={})
      say_command = "say"

      if options[:voice]
        say_command = "#{say_command} --voice #{options[:voice]}"
      end

      if options[:rate]
        say_command = "#{say_command} --rate #{options[:rate]}"
      end

      `#{say_command} #{sentence.shellescape}`
    end

    private

    def self.auto_increment
      @auto_increment ||= 0
      @auto_increment += 1
    end

    def show_banner(answer=false)
      column = answer ? @en : @en.gsub(/\w/, '_')

      puts @id
      puts @ja
      puts column
    end

    def input_answer
      pos = 0

      IO.console.noecho do |io|
        loop do
          if pos >= @en.length
            puts
            return true
          end

          if !(@en[pos] =~ /\w/)
            print Key.right
            pos += 1
            redo
          end

          while c = io.getch
            if Key.ctrl_c?(c) # Quit
              puts
              puts @en
              exit 0
            end

            if Key.ctrl_n?(c) # Next question
              puts
              puts @en
              return false
            end

            if Key.ctrl_s?(c) # Read a sentence
              Thread.new { say(:except => :ja) }
              next
            end

            if c =~ /#{@en[pos]}/i || Key.ctrl_h?(c)  # Open 1-letter
              print @en[pos]
              pos += 1
              break
            end
          end
        end
      end
    end
  end

  class SentenceSet < SortedSet
    include Singleton

    def initialize
      super

      while (en = DATA.gets) && (ja = DATA.gets) do
        add Sentence.new(:en => en.chomp, :ja => ja.chomp)
      end
    end

    def [](params)
      case params
      when Integer
        detect {|sentence| sentence.id == params} \
          or raise SentenceNotFound.new(params)
      when Range
        select {|sentence| params.include?(sentence.id)}
      end
    end

    def sample
      self[rand(size) + 1]
    end
  end

  class OptionParser
    def self.parse!(argv)
      options = {}

      OptionParser.new.instance_eval { |opt|
        command_name = File.basename($0)
        opt.banner = "Usage: #{command_name} [options]"

        opt.on('--list', 'show all sentences') {|list|
          options[:list] = list
        }

        opt.on('--play [RANGE|NUMBER]', 'play sentences') {|range_or_number|
          options[:play] = range_or_number
        }

        opt.on('--test [RANGE]', 'questions sequentially') {|test|
          options[:test] = test
        }

        opt.on('--number [NUMBER]', 'number of questions') {|number|
          options[:number] = number
        }

        opt.on('--random [RANGE]', 'range of questions') {|range|
          options[:random] = range
        }

        opt.parse!(argv)
      }

      cast options
    end

    private

    def self.cast(options)
      options.inject({}) do |opts, (key, value)|
        new_value = case value
                    when nil
                      true
                    when /\A\d+\z/
                      value.to_i
                    when /\A(\d+)\-(\d+)\z/
                      Range.new($1.to_i, $2.to_i)
                    else
                      value
                    end
        opts.update(key => new_value)
      end
    end
  end
end

if __FILE__ == $0
  include Duo

  begin
    require 'optparse'

    params       = Duo::OptionParser.parse!(ARGV)
    sentence_set = SentenceSet.instance

    case
    when !Duo::system_available?
      exit 1
    when params[:list]
      sentence_set.each do |sentence|
        puts [sentence.id, sentence.en, sentence.ja]
        puts
      end

    when params[:play]
      case params[:play]
      when Integer
        number = params[:play]
        sentence_set[number].play
      when Range
        range = params[:play]
        sentence_set[range].each do |sentence|
          sentence.play
          sleep 0.5
        end
      else
        sentence_set.each do |sentence|
          sentence.play
          sleep 0.5
        end
      end

    when params[:test]
      sentences = \
        if params[:test].is_a?(Range)
          range = params[:test]
          sentence_set[range]
        else
          sentence_set
        end
      sentences.each do |sentence|
        sentence.quiz
      end

    when params[:number]
      if params[:number].is_a?(Integer)
        sentence_set[params[:number]].quiz
      else
        raise OptionParser::InvalidArgument.new(params[:number])
      end

    when params[:random]
      if params[:random].is_a?(Range)
        range = params[:random]
        sentence_set[range].sample.quiz
      else
        raise OptionParser::InvalidArgument.new(params[:random])
      end

    else
      sentence_set.sample.quiz
    end
  rescue Errno::EPIPE
    # silent
  end
end

__END__
This company uses an automated system for billing.
この会社は請求に自動システムを使っている。
The company offered me a temporary position.
その会社は私に臨時の仕事を提示した。
The company took interest in my biotech background.
その会社は私の生命工学の経歴に関心を持った。
Write your name and profession on the form.
フォームにお名前と職業をご記入ください。
These training sessions are for new recruits.
これらの研修会は新入社員のためのものだ。
The repair crew is working on the road.
補修チームが道路の作業をしている。
Increased sales made revenue higher this quarter.
売り上げが伸びて、今四半期の収入が増加した。
The travel agency proposed three different vacation itineraries.
旅行代理店は3つの異なった休暇旅行の計画を提案した。
Sandra is in charge of ordering office supplies.
サンドラは事務用品の注文を担当している。
I'll present our findings on the car market.
自動車市場についての私の調査結果を発表します。
System offers great security at a low price.
システムは安価に高度な安全を提供します。
Passengers are advised to keep ferry tickets safe.
乗客の皆様はフェリーの切符をしっかり保管してください。
I have enough change for the parking meter.
駐車メーター用の小銭は十分にありますよ。
To track parcels, enter tracking numbers below.
荷物を追跡するには、以下に追跡番号を入力してください。
My house is in a quiet neighborhood.
私の家は静かな地域にある。
Our office climate is positive and team-oriented.
私のオフィスの雰囲気は良好で、チーム一丸になっている。
She arrived in time for the seminar.
彼女はそのセミナーに間に合うように到着した
Instead of fish, let's have steak tonight.
今夜は魚ではなくステーキをいただきましょう。
Please e-mail him no later than tomorrow.
明日までに彼にメールを打ってください。
This snack machine is out of order.
このスナックの機械は故障しています。
Our trip got under way in Vancouver.
私たちの旅行はバンクーバで始まりました。
He is likely to choose a new receptionist soon.
彼はすぐにでも新しい受付係を選ぶでしょう。
The situation calls for strong action.
状況は力強い行動を求めている。
We have to carry out her direction.
私たちは彼女の指示を実行しなければならない。
Feel free to contact me whenever necessary.
必要な時にはいつでも、遠慮なく私に連絡してください。
Please fill out this medical history form.
この医療履歴用紙にご記入ください。
Let's get off at the next stop.
次のバス停で降りましょう。
It's hard to keep up with market trends.
市場のトレンドについていくのは難しい。
Make sure that the room has enough chairs.
部屋に十分な椅子があることを確かめてください。
He'll pick up Larry from the airport.
彼が空港でラリーを出迎えます。
I'd better put on a winter jacket.
冬のジャケットを着るほうが良さそうだ。
When will the meeting take place?
会議はいつ開かれるのですか。
She turn off the lights.
彼女は照明を消した。
turn down
断る
make progress
進歩する
meet a deadline
締め切りを守る
miss a target
目標を見逃す
place an order
注文する
play a role
役割を果たす
raise money
資金を調達する
reach a conclusion
結論に達する
seal a deal
取引をまとめる
set a date
日時を設定する
take action
行動する
take responsibility
責任を負う
take the minutes
議事録を取る
She urged voters to support her campaign for governor.
彼女は有権者に彼女の知事選を支持してくれるように促した。
Entrance to the park requires a $5.25 fee.
公園への入場には5.25ドルの料金がかかります。
The firm reduced its reliance on older equipment.
その会社は古い設備への依存を下げた。
Have you persuaded the board to accept our proposal.
役員会に私たちの企画を承認するよう説得できましたか。
He tends to be a very bold and decisive leader.
彼は非常に勇気があり、決断力のあるリーダーというタイプだ。
He can handle the tight deadline for this project.
彼はこのプロジェクトの厳しい納期に対処することができる。
These boxes contain items for the spring sale.
これらの箱には春のセールの品物が入っている。
He appears to be doing well in his new position.
彼は新しい職務をうまくこなしているようだ。
Thanks for reminding me about the meeting.
会議について気づかせてくれてありがとう。
They have to maintain the production machines.
彼らは生産機械を整備しなければならない。
We'd better involve our manager in this decision.
私たちはこの決定に上司を関わらせるべきだ。
Our firm seeks to increase its market share next year.
我々の会社は来年、市場施入率を増やそうとしている。
The company provides safety gear to all construction site visitors.
建設現場の訪問者には全員に、会社は安全装備を提供します。
He corrected some errors in the report.
彼は報告書のいくつかのミスを訂正した。
He stated that his background was in chemistry.
彼は自分の専門が化学であると述べた。
Customers can easily renew Internet service with that telecom company.
顧客はその通信会社とのインターネットサービスを簡単に更新できる。
I hope that everyone will participate in this training enthusiastically.
誰もがこの研修に積極的に参加することを期待しています。
Guards prevent anyone without proper ID from entering the building.
守衛は適切な身分証を持たない人間が建物内に入らないようにする。
Store membership enables you to get great discounts.
店の会員になれば、大きな割引を受けることができる。
Please sort all of these papers on the desk.
デスクの上にあるこれらの書類を全部整理してください。
He described his background to the seminar attendees.
彼は自分の経歴をセミナーの出席者に説明した。
They found out where the damaged power line was located.
彼らは損傷を受けた電線がどこにあるかを突き止めた。
We treate our customers with upmost respect.
私どもはお客様に最高の敬意を払って対応します。
He was disappointed by not getting the promotion.
彼は昇格しなかったことに失望した。
The town suffer little damage from the flood.
その町は洪水の被害をほとんど被らなかった。
The company was barely able to survive the recession.
その会社は景気後退からかろうじて生き延びることができた。
The firm never violates national accounting standards.
会社は決して国の会計原則に違反していない。
Our office cubicles are opposite one another.
私たちのオフィスは向かい合っている。
Did you watch the entire TV news program?
そのテレビニュース番組を全部見ましたか。
This report contains a broad outline of the project.
この報告書はプロジェクトの幅広い全体像を含んでいる。
The city train station needs extensive repairs.
その市電の駅は広範な修理が必要だ。
The market potential of this item is obvious.
その商品の市場での可能性は明らかだ。
This dessert makes the meal complete.
このデザートにより、食事は完全なものになる。
He's effective at leading business teams.
彼はビジネスチームを率いる能力がある。
We have to be more efficient in our production.
我々は生産活動をもっと効率的にしなければならない。
We're delighted to have you at the convention.
会議にご出席いただき喜ばしく思います。
I'm confirtable accepting more responsibility.
喜んでもっと責任を引き受けます。
He was nervous about the job interview.
彼は仕事の面接について心配していた。
That cafe atmosphere is especially luxurious.
そのカフェの雰囲気はとりわけ豪華だ。
She owned a significant amount of stockes and bonds.
彼女は相当な数の株式と債権を保有している。
This scientific analysis is quite complicated.
この科学的な分析は極めて複雑なものだ。
This audio player is superior to other brands.
このオーディオプレーアーは他のブランドのものより優れている。
He hopes to attract more independent voters.
彼はさらに多くの無党派の有権者を取り込みたいと考えている。
The store operates additional hours during the holidays.
その店は休暇シーズンには時間を延長して営業する。
He's aware of the challenges facing the firm.
彼は会社が直面する課題をわかっている。
Although competitive, the athletes had mutual respect.
選手たちは競争心があるが、互いに尊敬の念を持っていた。
She wants our financial estimate to be more precise.
彼女は私たちの財務見直しをもっと正確にするように求めている。
The investiment became a net gain for the firm.
その投資は会社に正味の利益をもたらした。
You'll have to fill out some ordinary paperwork.
一般的な書類に記入していただく必要があります。
That mayer is bold; moreover, she is hard-working.
その市長は大胆だ。その上、彼女は勤勉だ。
Why invite him?  Besides, he wouldn't come anyway.
どうして彼を招待するの? それに、どのみち彼は来ないでしょう。
Unfortunatelly, our parking lot is completely full.
残念ながら、私どもの駐車場は満車になっています。
Our Vietnam office will definitely open in December.
私たちのベトナム事務所は、12月には確実に開設されます。
